{
	"Create public function": {
		"prefix": "pubf",
		"body": [
			"public function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create public function"
	},
	"Create private function": {
		"prefix": "prif",
		"body": [
			"private function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create private function"
	},
	"Create protected function": {
		"prefix": "prof",
		"body": [
			"protected function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create protected function"
	},
	"Create public static function": {
		"prefix": "pubsf",
		"body": [
			"public static function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create public static function"
	},
	"Create private static function": {
		"prefix": "prif",
		"body": [
			"private static function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create private static function"
	},
	"Create protected static function": {
		"prefix": "prof",
		"body": [
			"protected static function $1()",
			"{",
			"\t$2",
			"}"
		],
		"description": "Create protected static function"
	},
	"Create public function with belongsTo": {
		"prefix": "belongs",
		"body": [
			"public function $1()",
			"{",
			"\treturn \\$this->belongsTo($2::class);",
			"}"
		],
		"description": "Create public function with belongsTo"
	},
	"Create public function with has many": {
		"prefix": "hasm",
		"body": [
			"public function $1()",
			"{",
			"\treturn \\$this->hasMany($2::class);",
			"}"
		],
		"description": "Create public function with has many"
	},
	"Create protected $fillable": {
		"prefix": "fillable",
		"body": [
			"protected \\$fillable = [",
			"\t'$1', '$2', '$3', '$4',",
			"];"
		],
		"description": "Create protected $fillable array"
	},
	"Laravel BelongsToMany Relationship": {
		"prefix": "belongstomany",
		"body": [
			"/**",
			" * Define a many-to-many relationship.",
			" *",
			" * @return \\Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany",
			" */",
			"public function $1()",
			"{",
			"    return $$this->belongsToMany($2::class);",
			"}"
		],
		"description": "Generate a Laravel belongsToMany relationship method"
	},
	"Laravel GET Route with index view": {
		"prefix": "routeindex",
		"body": [
			"Route::get('${1}', [${2:Controller}::class, 'index']);"
		],
		"description": "Laravel index route"
	},
	"Laravel GET Route with show view": {
		"prefix": "routeshow",
		"body": [
			"Route::get('${1}', [${2:Controller}::class, 'show']);"
		],
		"description": "Laravel show route"
	},
	"Laravel GET Route with create view": {
		"prefix": "routecreate",
		"body": [
			"Route::get('${1}', [${2:Controller}::class, 'create']);"
		],
		"description": "Laravel create route"
	},
	"Laravel POST Route store": {
		"prefix": "routestore",
		"body": [
			"Route::post('${1}', [${2:Controller}::class, 'store']);"
		],
		"description": "Laravel store route"
	},
	"Laravel GET Route edit": {
		"prefix": "routeedit",
		"body": [
			"Route::get('${1}', [${2:Controller}::class, 'edit']);"
		],
		"description": "Laravel edit route"
	},
	"Laravel POST Route update": {
		"prefix": "reouteupdate",
		"body": [
			"Route::get('${1}', [${2:Controller}::class, 'update']);"
		],
		"description": "Laravel update route"
	},
	"Laravel DELETE Route": {
		"prefix": "routedestroy",
		"body": [
			"Route::delete('${1}', [${2:Controller}::class, 'destroy']);"
		],
		"description": "Laravel destroy route"
	},
	"Laravel SEARCH Route": {
		"prefix": "routesearch",
		"body": [
			"Route::get('/search', SearchController::class);"
		],
		"description": "Laravel Search route"
	},
	"Laravel Route Group": {
		"prefix": "rmg",
		"body": [
			"Route::middleware('')->group(function () {",
			"});"
		],
		"description": "Laravel route example with middleware group"
	},
	"Dump and Die": {
		"prefix": "dd",
		"body": [
			"function dd(\\$value) {",
			"    echo \"<pre>\";",
			"    var_dump(\\$value);",
			"    echo \"</pre>\";",
			"    die();",
			"}",
			"",
			"dd(\\$1);"
		],
		"description": "Dump the variable and die"
	}
}
